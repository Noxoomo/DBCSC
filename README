----
Run: java -jar jarFile db, where db - database folderName
or scala jarFile Main
----

API (console)
insert key->value //insert, if key exists -> error
get key // get key, if no key found -> error
remove key //delete key, if succesufull -> report, if can't delete -> can't delete message, if no key found -> no key found error
update key->value //update value of the key if key exists
quit // quit
----

DataBase Format:
DB:
file from blocks: blocksize T/F key value
blocksize: Int
T/F — char (removed this file or not)
Index:
key — offset
----

Cache:
Database all operations proceed on disk, for fast access uses cache, at the moment without control of max allowed memory



---
to run node – scala jar Node
Config Node
first line —  i uid ip port from to
keys from to — from and to — limits for key.hashCode to store in node
then nodes
node nodename ip port from to
node nodename ip port from to
…

--
Server Node
scala jar ServerStarter
server takes queries from console and store it in single file






This file was modified by IntelliJ IDEA 12.1.4 for binding GitHub repository